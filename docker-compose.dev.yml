services: # Postgres Database Service
  postgres:
    restart: always
    image: postgres:15
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    networks:
      - my-network

  # Payload (Node.js App) Service
  payload:
    image: node:22-alpine
    restart: always
    environment:
      DATABASE_URL: ${DATABASE_URI}
      PAYLOAD_SECRET: ${PAYLOAD_SECRET}
    ports:
      - '3000:3000'
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "corepack enable && corepack prepare pnpm@latest --activate && pnpm install && pnp>
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - my-network

  # Nginx Reverse Proxy Service
  nginx:
    image: nginx:latest
    container_name: nginx-reverse-proxy
    restart: always
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - payload
    networks:
      - my-network

networks:
  my-network:
    external: true
volumes:
  data:
  pgdata:
  node_modules:
